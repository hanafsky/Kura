name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          Compress-Archive -Path target/${{ matrix.target }}/release/kura.exe -DestinationPath kura-${{ matrix.target }}.zip

      - name: Package binary (Unix)
        if: ${{ matrix.os != 'windows-latest' }}
        run: zip -j kura-${{ matrix.target }}.zip target/${{ matrix.target }}/release/kura

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: kura-${{ matrix.target }}
          path: kura-${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v2
        with:
          name: kura-x86_64-unknown-linux-gnu

      - name: Download macOS artifact
        uses: actions/download-artifact@v2
        with:
          name: kura-x86_64-apple-darwin

      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: kura-x86_64-pc-windows-msvc

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: kura-x86_64-unknown-linux-gnu.zip
          asset_name: kura-x86_64-unknown-linux-gnu.zip
          asset_content_type: application/zip

      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: kura-x86_64-apple-darwin.zip
          asset_name: kura-x86_64-apple-darwin.zip
          asset_content_type: application/zip

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: kura-x86_64-pc-windows-msvc.zip
          asset_name: kura-x86_64-pc-windows-msvc.zip
          asset_content_type: application/zip